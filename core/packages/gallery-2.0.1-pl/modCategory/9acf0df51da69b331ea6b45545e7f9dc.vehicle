<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Chunks' => 
    array (
      'e13c970f9394ee644c7b34f8dfd878b7' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"galAlbumRowTpl","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<li[[+cls:notempty=` class=\\"[[+cls]]\\"`]]><a href=\\"[[~[[*id]]? &[[+albumRequestVar]]=`[[+id]]`]]\\">[[+showName:notempty=`[[+name]]`]]<\\/a><\\/li>","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<li[[+cls:notempty=` class=\\"[[+cls]]\\"`]]><a href=\\"[[~[[*id]]? &[[+albumRequestVar]]=`[[+id]]`]]\\">[[+showName:notempty=`[[+name]]`]]<\\/a><\\/li>"}',
        'guid' => 'f5c3bbe35d67581e831f91ef013004ed',
        'native_key' => NULL,
        'signature' => 'c3ea4770ec44977b0ec33c87b0c3181b',
      ),
      'd96e48c501d2a4efd805cf13e0376c79' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"galAlbumRowWithCoverTpl","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<li[[+cls:notempty=` class=\\"[[+cls]]\\"`]]>\\n    <a href=\\"[[~[[*id]]? &[[+albumRequestVar]]=`[[+id]]`]]\\">\\n        [[+image:notempty=`<img src=\\"[[+image]]\\" alt=\\"[[+title]]\\" \\/>`]]\\n        [[+showName:notempty=`<span>[[+name]] ([[+total]])<\\/span>`]]\\n    <\\/a>\\n<\\/li>","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<li[[+cls:notempty=` class=\\"[[+cls]]\\"`]]>\\n    <a href=\\"[[~[[*id]]? &[[+albumRequestVar]]=`[[+id]]`]]\\">\\n        [[+image:notempty=`<img src=\\"[[+image]]\\" alt=\\"[[+title]]\\" \\/>`]]\\n        [[+showName:notempty=`<span>[[+name]] ([[+total]])<\\/span>`]]\\n    <\\/a>\\n<\\/li>"}',
        'guid' => 'f7df929e72e10d9f5939b926e4701376',
        'native_key' => NULL,
        'signature' => '24406eaa11f71ac36acb3801632a443d',
      ),
      'd62796d27723c7f116a3984890472d1f' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"galItem","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<a href=\\"[[+url:is=``:then=`[[+image]]`:else=`[[+url]]`]]\\" [[+link_attributes]]>\\n    <img class=\\"[[+imgCls]]\\" src=\\"[[+thumbnail]]\\" alt=\\"[[+name]]\\" [[+image_attributes]] \\/>\\n<\\/a>","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<a href=\\"[[+url:is=``:then=`[[+image]]`:else=`[[+url]]`]]\\" [[+link_attributes]]>\\n    <img class=\\"[[+imgCls]]\\" src=\\"[[+thumbnail]]\\" alt=\\"[[+name]]\\" [[+image_attributes]] \\/>\\n<\\/a>"}',
        'guid' => '92b4d8e08152a80fa6f417fbd7ce49d8',
        'native_key' => NULL,
        'signature' => '09353f774203b24887c88c389bed18aa',
      ),
      'a1ce032b4ec5e60b0807f17b72f85c28' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"galItemAlbum","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<span class=\\"gal-item-album\\"><a href=\\"[[~[[*id]]? &[[+albumRequestVar]]=`[[+id]]`]]\\">[[+name]]<\\/a><\\/span>","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<span class=\\"gal-item-album\\"><a href=\\"[[~[[*id]]? &[[+albumRequestVar]]=`[[+id]]`]]\\">[[+name]]<\\/a><\\/span>"}',
        'guid' => 'c32099ad036cf1f1029d3639e563260d',
        'native_key' => NULL,
        'signature' => 'b53fba955d531f5c94a9bd0d6bb22d9c',
      ),
      '1fbadfe2adde0c3a4ff0f5c4b5119ecc' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"galItemTag","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<span class=\\"gal-item-tag\\"><a href=\\"[[~[[*id]]? &[[+tagRequestVar]]=`[[+tag]]`]]\\">[[+tag]]<\\/a><\\/span>","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<span class=\\"gal-item-tag\\"><a href=\\"[[~[[*id]]? &[[+tagRequestVar]]=`[[+tag]]`]]\\">[[+tag]]<\\/a><\\/span>"}',
        'guid' => '8b63b9c67a007cdc3e95521e515c0471',
        'native_key' => NULL,
        'signature' => '60ad0110a5758a7d1d6e3f3f961d1859',
      ),
      'cb31a4aad8f2bab185b084ff5b094961' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"galItemThumb","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<div class=\\"[[+cls]]\\">\\n    <a href=\\"[[+linkToImage:if=`[[+linkToImage]]`:is=`1`:then=`[[+image_absolute]]`:else=`[[~[[*id]]?\\n            &[[+imageGetParam]]=`[[+id]]`\\n            &[[+albumRequestVar]]=`[[+album]]`\\n            &[[+tagRequestVar]]=`[[+tag]]` ]]`]]\\" title=\\"[[+name]]\\" [[+link_attributes]]>\\n\\n        <img class=\\"[[+imgCls]]\\" src=\\"[[+thumbnail]]\\" alt=\\"[[+name]]\\" [[+image_attributes]] \\/>\\n    <\\/a>\\n<\\/div>","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<div class=\\"[[+cls]]\\">\\n    <a href=\\"[[+linkToImage:if=`[[+linkToImage]]`:is=`1`:then=`[[+image_absolute]]`:else=`[[~[[*id]]?\\n            &[[+imageGetParam]]=`[[+id]]`\\n            &[[+albumRequestVar]]=`[[+album]]`\\n            &[[+tagRequestVar]]=`[[+tag]]` ]]`]]\\" title=\\"[[+name]]\\" [[+link_attributes]]>\\n\\n        <img class=\\"[[+imgCls]]\\" src=\\"[[+thumbnail]]\\" alt=\\"[[+name]]\\" [[+image_attributes]] \\/>\\n    <\\/a>\\n<\\/div>"}',
        'guid' => '98975e7e69776db940c910d44e1450a7',
        'native_key' => NULL,
        'signature' => 'f433213b1b03ee196462b6f65295092c',
      ),
    ),
    'Snippets' => 
    array (
      '49d84d5b5489a8e4c8c8d23e0ce5ff78' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"Gallery","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Gallery\\n *\\n * Copyright 2010-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * Gallery is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Gallery is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Gallery; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package gallery\\n *\\/\\n\\/**\\n * The main Gallery snippet.\\n *\\n * @var modX $modx\\n * @var Gallery $gallery\\n *\\n * @package gallery\\n *\\/\\n\\/** @noinspection PhpUndefinedVariableInspection *\\/\\n$gallery = $modx->getService(\'gallery\',\'Gallery\',$modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\').\'model\\/gallery\\/\',$scriptProperties);\\nif (!($gallery instanceof Gallery)) return \'\';\\n$modx->lexicon->load(\'gallery:web\');\\n\\n\\/* check for REQUEST vars if property set *\\/\\n$imageGetParam = $modx->getOption(\'imageGetParam\',$scriptProperties,\'galItem\');\\n$albumRequestVar = $modx->getOption(\'albumRequestVar\',$scriptProperties,\'galAlbum\');\\n$tagRequestVar = $modx->getOption(\'tagRequestVar\',$scriptProperties,\'galTag\');\\nif ($modx->getOption(\'checkForRequestAlbumVar\',$scriptProperties,true)) {\\n    if (!empty($_REQUEST[$albumRequestVar])) $scriptProperties[\'album\'] = $_REQUEST[$albumRequestVar];\\n}\\nif ($modx->getOption(\'checkForRequestTagVar\',$scriptProperties,true)) {\\n    if (!empty($_REQUEST[$tagRequestVar])) $scriptProperties[\'tag\'] = $_REQUEST[$tagRequestVar];\\n}\\nif (empty($scriptProperties[\'album\']) && empty($scriptProperties[\'tag\'])) return \'\';\\n\\n$data = $modx->call(\'galItem\',\'getList\',array(&$modx,$scriptProperties));\\n$totalVar = $modx->getOption(\'totalVar\', $scriptProperties, \'total\');\\nif (is_array($data) && isset($data[\'total\'])){\\n    $modx->setPlaceholder($totalVar,$data[\'total\']);\\n}\\n\\n\\/* load plugins *\\/\\n$plugin = $modx->getOption(\'plugin\',$scriptProperties,\'\');\\nif (!empty($plugin)) {\\n    $pluginPath = $modx->getOption(\'pluginPath\',$scriptProperties,\'\');\\n    if (empty($pluginPath)) {\\n        $pluginPath = $gallery->config[\'modelPath\'].\'gallery\\/plugins\\/\';\\n    }\\n    \\/** @var GalleryPlugin $plugin *\\/\\n    if (($className = $modx->loadClass($plugin,$pluginPath,true,true))) {\\n        $plugin = new $className($gallery,$scriptProperties);\\n        $plugin->load();\\n        $scriptProperties = $plugin->adjustSettings($scriptProperties);\\n    } else {\\n        return $modx->lexicon(\'gallery.plugin_err_load\',array(\'name\' => $plugin,\'path\' => $pluginPath));\\n    }\\n} else {\\n    if ($modx->getOption(\'useCss\',$scriptProperties,true)) {\\n        $modx->regClientCSS($gallery->config[\'cssUrl\'].\'web.css\');\\n    }\\n}\\n\\n\\/* iterate *\\/\\n$imageProperties = $modx->getOption(\'imageProperties\',$scriptProperties,\'\');\\n$imageProperties = !empty($imageProperties) ? $modx->fromJSON($imageProperties) : array();\\n$imageProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'imageWidth\',$scriptProperties,500),\\n    \'h\' => (int)$modx->getOption(\'imageHeight\',$scriptProperties,500),\\n    \'zc\' => (boolean)$modx->getOption(\'imageZoomCrop\',$scriptProperties,0),\\n    \'far\' => (string)$modx->getOption(\'imageFar\',$scriptProperties,false),\\n    \'q\' => (int)$modx->getOption(\'imageQuality\',$scriptProperties,90),\\n),$imageProperties);\\n\\n$thumbProperties = $modx->getOption(\'thumbProperties\',$scriptProperties,\'\');\\n$thumbProperties = !empty($thumbProperties) ? $modx->fromJSON($thumbProperties) : array();\\n$thumbProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'thumbWidth\',$scriptProperties,100),\\n    \'h\' => (int)$modx->getOption(\'thumbHeight\',$scriptProperties,100),\\n    \'zc\' => (boolean)$modx->getOption(\'thumbZoomCrop\',$scriptProperties,1),\\n    \'far\' => (string)$modx->getOption(\'thumbFar\',$scriptProperties,\'C\'),\\n    \'q\' => (int)$modx->getOption(\'thumbQuality\',$scriptProperties,90),\\n),$thumbProperties);\\n\\n$idx = 0;\\n$output = array();\\n$filesUrl = $modx->call(\'galAlbum\',\'getFilesUrl\',array(&$modx));\\n$filesPath = $modx->call(\'galAlbum\',\'getFilesPath\',array(&$modx));\\n$itemCls = $modx->getOption(\'itemCls\',$scriptProperties,\'gal-item\');\\n$imageAttributes = $modx->getOption(\'imageAttributes\',$scriptProperties,\'\');\\n$linkAttributes = $modx->getOption(\'linkAttributes\',$scriptProperties,\'\');\\n$linkToImage = $modx->getOption(\'linkToImage\',$scriptProperties,false);\\n$activeCls = $modx->getOption(\'activeCls\',$scriptProperties,\'gal-item-active\');\\n$highlightItem = $modx->getOption($imageGetParam,$_REQUEST,false);\\n$defaultThumbTpl = $modx->getOption(\'thumbTpl\',$scriptProperties,\'galItemThumb\');\\n\\n\\/** @var galItem $item *\\/\\n\\nif (!is_array($data)) return \'\';\\n\\n\\/\\/ prep for &thumbTpl_N\\n$keys = array_keys($scriptProperties);\\n$nthTpls = array();\\nforeach($keys as $key) {\\n    $keyBits = $gallery->explodeAndClean($key, \'_\');\\n    if (isset($keyBits[0]) && $keyBits[0] === \'thumbTpl\' && isset($keyBits[1])) {\\n        if ($i = (int) $keyBits[1]) $nthTpls[$i] = $scriptProperties[$key];\\n    }\\n}\\nksort($nthTpls);\\n\\nforeach ($data[\'items\'] as $item) {\\n    $itemArray = $item->toArray();\\n    $itemArray[\'idx\'] = $idx;\\n    $itemArray[\'cls\'] = $itemCls;\\n    if ($itemArray[\'id\'] == $highlightItem) {\\n        $itemArray[\'cls\'] .= \' \'.$activeCls;\\n    }\\n    $itemArray[\'filename\'] = basename($item->get(\'filename\'));\\n    $itemArray[\'image_absolute\'] = $item->get(\'base_url\').$filesUrl.$item->get(\'filename\');\\n    $itemArray[\'fileurl\'] = $itemArray[\'image_absolute\'];\\n    $itemArray[\'filepath\'] = $filesPath.$item->get(\'filename\');\\n    $itemArray[\'filesize\'] = $item->get(\'filesize\');\\n    $itemArray[\'thumbnail\'] = $item->get(\'thumbnail\',$thumbProperties);\\n    $itemArray[\'image\'] = $item->get(\'thumbnail\',$imageProperties);\\n    $itemArray[\'image_attributes\'] = $imageAttributes;\\n    $itemArray[\'link_attributes\'] = $linkAttributes;\\n    if (!empty($scriptProperties[\'album\'])) $itemArray[\'album\'] = $scriptProperties[\'album\'];\\n    if (!empty($scriptProperties[\'tag\'])) $itemArray[\'tag\'] = $scriptProperties[\'tag\'];\\n    $itemArray[\'linkToImage\'] = $linkToImage;\\n    $itemArray[\'url\'] = $item->get(\'url\');\\n    $itemArray[\'imageGetParam\'] = $imageGetParam;\\n    $itemArray[\'albumRequestVar\'] = $albumRequestVar;\\n    $itemArray[\'tagRequestVar\'] = $tagRequestVar;\\n    $itemArray[\'tag\'] = \'\';\\n    if ($plugin) {\\n        $plugin->renderItem($itemArray);\\n    }\\n\\n    $thumbTpl = $defaultThumbTpl;\\n    if (isset($nthTpls[$idx])) {\\n        $thumbTpl = $nthTpls[$idx];\\n    } else {\\n        foreach ($nthTpls as $int => $tpl) {\\n            if ( ($idx % $int) === 0 ) $thumbTpl = $tpl;\\n        }\\n    }\\n\\n    $output[] = $gallery->getChunk($thumbTpl,$itemArray);\\n\\n    $idx++;\\n}\\n$output = implode(\\"\\\\n\\",$output);\\n\\n\\/* if set, place in a container tpl *\\/\\n$containerTpl = $modx->getOption(\'containerTpl\',$scriptProperties,false);\\nif (!empty($containerTpl)) {\\n    $ct = $gallery->getChunk($containerTpl,array(\\n        \'thumbnails\' => $output,\\n        \'album_name\' => $data[\'album\'][\'name\'],\\n        \'album_description\' => $data[\'album\'][\'description\'],\\n        \'album_year\' => $data[\'album\'][\'year\'] ?? \'\',\\n        \'albumRequestVar\' => $albumRequestVar,\\n        \'albumId\' => $data[\'album\'][\'id\'],\\n    ));\\n    if (!empty($ct)) $output = $ct;\\n}\\n\\n\\/* set to placeholders or output directly *\\/\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\nif (!empty($toPlaceholder)) {\\n    $modx->toPlaceholders(array(\\n        $toPlaceholder => $output,\\n        $toPlaceholder.\'.id\' => $data[\'album\'][\'id\'],\\n        $toPlaceholder.\'.name\' => $data[\'album\'][\'name\'],\\n        $toPlaceholder.\'.year\' => $data[\'album\'][\'year\'] ?? \'\',\\n        $toPlaceholder.\'.description\' => $data[\'album\'][\'description\'],\\n        $toPlaceholder.\'.total\' => $data[\'total\'],\\n        $toPlaceholder.\'.next\' => $data[\'album\'][\'id\'] + 1,\\n        $toPlaceholder.\'.prev\' => $data[\'album\'][\'id\'] - 1,\\n    ));\\n} else {\\n    $placeholderPrefix = $modx->getOption(\'placeholderPrefix\',$scriptProperties,\'gallery.\');\\n    $modx->toPlaceholders(array(\\n        $placeholderPrefix.\'id\' => $data[\'album\'][\'id\'],\\n        $placeholderPrefix.\'name\' => $data[\'album\'][\'name\'],\\n        $placeholderPrefix.\'year\' => $data[\'album\'][\'year\'] ?? \'\',\\n        $placeholderPrefix.\'description\' => $data[\'album\'][\'description\'],\\n        $placeholderPrefix.\'total\' => $data[\'total\'],\\n        $placeholderPrefix.\'next\' => $data[\'album\'][\'id\'] + 1,\\n        $placeholderPrefix.\'prev\' => $data[\'album\'][\'id\'] - 1,\\n    ));\\n    return $output;\\n}\\nreturn \'\';","locked":0,"properties":"a:33:{s:5:\\"album\\";a:7:{s:4:\\"name\\";s:5:\\"album\\";s:4:\\"desc\\";s:18:\\"gallery.album_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tag\\";a:7:{s:4:\\"name\\";s:3:\\"tag\\";s:4:\\"desc\\";s:16:\\"gallery.tag_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"plugin\\";a:7:{s:4:\\"name\\";s:6:\\"plugin\\";s:4:\\"desc\\";s:19:\\"gallery.plugin_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"pluginPath\\";a:7:{s:4:\\"name\\";s:10:\\"pluginPath\\";s:4:\\"desc\\";s:23:\\"gallery.pluginpath_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"thumbTpl\\";a:7:{s:4:\\"name\\";s:8:\\"thumbTpl\\";s:4:\\"desc\\";s:21:\\"gallery.thumbtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:12:\\"galItemThumb\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"containerTpl\\";a:7:{s:4:\\"name\\";s:12:\\"containerTpl\\";s:4:\\"desc\\";s:25:\\"gallery.containertpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"itemCls\\";a:7:{s:4:\\"name\\";s:7:\\"itemCls\\";s:4:\\"desc\\";s:20:\\"gallery.itemcls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:8:\\"gal-item\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"activeCls\\";a:7:{s:4:\\"name\\";s:9:\\"activeCls\\";s:4:\\"desc\\";s:22:\\"gallery.activecls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:15:\\"gal-item-active\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:26:\\"gallery.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"thumbWidth\\";a:7:{s:4:\\"name\\";s:10:\\"thumbWidth\\";s:4:\\"desc\\";s:23:\\"gallery.thumbwidth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"100\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"thumbHeight\\";a:7:{s:4:\\"name\\";s:11:\\"thumbHeight\\";s:4:\\"desc\\";s:24:\\"gallery.thumbheight_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"100\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"thumbZoomCrop\\";a:7:{s:4:\\"name\\";s:13:\\"thumbZoomCrop\\";s:4:\\"desc\\";s:26:\\"gallery.thumbzoomcrop_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"thumbFar\\";a:7:{s:4:\\"name\\";s:8:\\"thumbFar\\";s:4:\\"desc\\";s:21:\\"gallery.thumbfar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"C\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"thumbQuality\\";a:7:{s:4:\\"name\\";s:12:\\"thumbQuality\\";s:4:\\"desc\\";s:25:\\"gallery.thumbquality_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:90;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"thumbProperties\\";a:7:{s:4:\\"name\\";s:15:\\"thumbProperties\\";s:4:\\"desc\\";s:28:\\"gallery.thumbproperties_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"linkToImage\\";a:7:{s:4:\\"name\\";s:11:\\"linkToImage\\";s:4:\\"desc\\";s:24:\\"gallery.linktoimage_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"imageGetParam\\";a:7:{s:4:\\"name\\";s:13:\\"imageGetParam\\";s:4:\\"desc\\";s:26:\\"gallery.imagegetparam_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:7:\\"galItem\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"imageWidth\\";a:7:{s:4:\\"name\\";s:10:\\"imageWidth\\";s:4:\\"desc\\";s:23:\\"gallery.imagewidth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:500;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"imageHeight\\";a:7:{s:4:\\"name\\";s:11:\\"imageHeight\\";s:4:\\"desc\\";s:24:\\"gallery.imageheight_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:500;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"imageZoomCrop\\";a:7:{s:4:\\"name\\";s:13:\\"imageZoomCrop\\";s:4:\\"desc\\";s:26:\\"gallery.imagezoomcrop_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"imageFar\\";a:7:{s:4:\\"name\\";s:8:\\"imageFar\\";s:4:\\"desc\\";s:21:\\"gallery.imagefar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"imageQuality\\";a:7:{s:4:\\"name\\";s:12:\\"imageQuality\\";s:4:\\"desc\\";s:25:\\"gallery.imagequality_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:90;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"imageProperties\\";a:7:{s:4:\\"name\\";s:15:\\"imageProperties\\";s:4:\\"desc\\";s:28:\\"gallery.imageproperties_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"sort\\";a:7:{s:4:\\"name\\";s:4:\\"sort\\";s:4:\\"desc\\";s:17:\\"gallery.sort_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"rank\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"dir\\";a:7:{s:4:\\"name\\";s:3:\\"dir\\";s:4:\\"desc\\";s:16:\\"gallery.dir_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:18:\\"gallery.limit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"start\\";a:7:{s:4:\\"name\\";s:5:\\"start\\";s:4:\\"desc\\";s:18:\\"gallery.start_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"showInactive\\";a:7:{s:4:\\"name\\";s:12:\\"showInactive\\";s:4:\\"desc\\";s:25:\\"gallery.showinactive_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:23:\\"checkForRequestAlbumVar\\";a:7:{s:4:\\"name\\";s:23:\\"checkForRequestAlbumVar\\";s:4:\\"desc\\";s:36:\\"gallery.checkforrequestalbumvar_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"albumRequestVar\\";a:7:{s:4:\\"name\\";s:15:\\"albumRequestVar\\";s:4:\\"desc\\";s:28:\\"gallery.albumrequestvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:8:\\"galAlbum\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:21:\\"checkForRequestTagVar\\";a:7:{s:4:\\"name\\";s:21:\\"checkForRequestTagVar\\";s:4:\\"desc\\";s:34:\\"gallery.checkforrequesttagvar_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"tagRequestVar\\";a:7:{s:4:\\"name\\";s:13:\\"tagRequestVar\\";s:4:\\"desc\\";s:26:\\"gallery.tagrequestvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:6:\\"galTag\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"useCss\\";a:7:{s:4:\\"name\\";s:6:\\"useCss\\";s:4:\\"desc\\";s:19:\\"gallery.usecss_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Gallery\\n *\\n * Copyright 2010-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * Gallery is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Gallery is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Gallery; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package gallery\\n *\\/\\n\\/**\\n * The main Gallery snippet.\\n *\\n * @var modX $modx\\n * @var Gallery $gallery\\n *\\n * @package gallery\\n *\\/\\n\\/** @noinspection PhpUndefinedVariableInspection *\\/\\n$gallery = $modx->getService(\'gallery\',\'Gallery\',$modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\').\'model\\/gallery\\/\',$scriptProperties);\\nif (!($gallery instanceof Gallery)) return \'\';\\n$modx->lexicon->load(\'gallery:web\');\\n\\n\\/* check for REQUEST vars if property set *\\/\\n$imageGetParam = $modx->getOption(\'imageGetParam\',$scriptProperties,\'galItem\');\\n$albumRequestVar = $modx->getOption(\'albumRequestVar\',$scriptProperties,\'galAlbum\');\\n$tagRequestVar = $modx->getOption(\'tagRequestVar\',$scriptProperties,\'galTag\');\\nif ($modx->getOption(\'checkForRequestAlbumVar\',$scriptProperties,true)) {\\n    if (!empty($_REQUEST[$albumRequestVar])) $scriptProperties[\'album\'] = $_REQUEST[$albumRequestVar];\\n}\\nif ($modx->getOption(\'checkForRequestTagVar\',$scriptProperties,true)) {\\n    if (!empty($_REQUEST[$tagRequestVar])) $scriptProperties[\'tag\'] = $_REQUEST[$tagRequestVar];\\n}\\nif (empty($scriptProperties[\'album\']) && empty($scriptProperties[\'tag\'])) return \'\';\\n\\n$data = $modx->call(\'galItem\',\'getList\',array(&$modx,$scriptProperties));\\n$totalVar = $modx->getOption(\'totalVar\', $scriptProperties, \'total\');\\nif (is_array($data) && isset($data[\'total\'])){\\n    $modx->setPlaceholder($totalVar,$data[\'total\']);\\n}\\n\\n\\/* load plugins *\\/\\n$plugin = $modx->getOption(\'plugin\',$scriptProperties,\'\');\\nif (!empty($plugin)) {\\n    $pluginPath = $modx->getOption(\'pluginPath\',$scriptProperties,\'\');\\n    if (empty($pluginPath)) {\\n        $pluginPath = $gallery->config[\'modelPath\'].\'gallery\\/plugins\\/\';\\n    }\\n    \\/** @var GalleryPlugin $plugin *\\/\\n    if (($className = $modx->loadClass($plugin,$pluginPath,true,true))) {\\n        $plugin = new $className($gallery,$scriptProperties);\\n        $plugin->load();\\n        $scriptProperties = $plugin->adjustSettings($scriptProperties);\\n    } else {\\n        return $modx->lexicon(\'gallery.plugin_err_load\',array(\'name\' => $plugin,\'path\' => $pluginPath));\\n    }\\n} else {\\n    if ($modx->getOption(\'useCss\',$scriptProperties,true)) {\\n        $modx->regClientCSS($gallery->config[\'cssUrl\'].\'web.css\');\\n    }\\n}\\n\\n\\/* iterate *\\/\\n$imageProperties = $modx->getOption(\'imageProperties\',$scriptProperties,\'\');\\n$imageProperties = !empty($imageProperties) ? $modx->fromJSON($imageProperties) : array();\\n$imageProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'imageWidth\',$scriptProperties,500),\\n    \'h\' => (int)$modx->getOption(\'imageHeight\',$scriptProperties,500),\\n    \'zc\' => (boolean)$modx->getOption(\'imageZoomCrop\',$scriptProperties,0),\\n    \'far\' => (string)$modx->getOption(\'imageFar\',$scriptProperties,false),\\n    \'q\' => (int)$modx->getOption(\'imageQuality\',$scriptProperties,90),\\n),$imageProperties);\\n\\n$thumbProperties = $modx->getOption(\'thumbProperties\',$scriptProperties,\'\');\\n$thumbProperties = !empty($thumbProperties) ? $modx->fromJSON($thumbProperties) : array();\\n$thumbProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'thumbWidth\',$scriptProperties,100),\\n    \'h\' => (int)$modx->getOption(\'thumbHeight\',$scriptProperties,100),\\n    \'zc\' => (boolean)$modx->getOption(\'thumbZoomCrop\',$scriptProperties,1),\\n    \'far\' => (string)$modx->getOption(\'thumbFar\',$scriptProperties,\'C\'),\\n    \'q\' => (int)$modx->getOption(\'thumbQuality\',$scriptProperties,90),\\n),$thumbProperties);\\n\\n$idx = 0;\\n$output = array();\\n$filesUrl = $modx->call(\'galAlbum\',\'getFilesUrl\',array(&$modx));\\n$filesPath = $modx->call(\'galAlbum\',\'getFilesPath\',array(&$modx));\\n$itemCls = $modx->getOption(\'itemCls\',$scriptProperties,\'gal-item\');\\n$imageAttributes = $modx->getOption(\'imageAttributes\',$scriptProperties,\'\');\\n$linkAttributes = $modx->getOption(\'linkAttributes\',$scriptProperties,\'\');\\n$linkToImage = $modx->getOption(\'linkToImage\',$scriptProperties,false);\\n$activeCls = $modx->getOption(\'activeCls\',$scriptProperties,\'gal-item-active\');\\n$highlightItem = $modx->getOption($imageGetParam,$_REQUEST,false);\\n$defaultThumbTpl = $modx->getOption(\'thumbTpl\',$scriptProperties,\'galItemThumb\');\\n\\n\\/** @var galItem $item *\\/\\n\\nif (!is_array($data)) return \'\';\\n\\n\\/\\/ prep for &thumbTpl_N\\n$keys = array_keys($scriptProperties);\\n$nthTpls = array();\\nforeach($keys as $key) {\\n    $keyBits = $gallery->explodeAndClean($key, \'_\');\\n    if (isset($keyBits[0]) && $keyBits[0] === \'thumbTpl\' && isset($keyBits[1])) {\\n        if ($i = (int) $keyBits[1]) $nthTpls[$i] = $scriptProperties[$key];\\n    }\\n}\\nksort($nthTpls);\\n\\nforeach ($data[\'items\'] as $item) {\\n    $itemArray = $item->toArray();\\n    $itemArray[\'idx\'] = $idx;\\n    $itemArray[\'cls\'] = $itemCls;\\n    if ($itemArray[\'id\'] == $highlightItem) {\\n        $itemArray[\'cls\'] .= \' \'.$activeCls;\\n    }\\n    $itemArray[\'filename\'] = basename($item->get(\'filename\'));\\n    $itemArray[\'image_absolute\'] = $item->get(\'base_url\').$filesUrl.$item->get(\'filename\');\\n    $itemArray[\'fileurl\'] = $itemArray[\'image_absolute\'];\\n    $itemArray[\'filepath\'] = $filesPath.$item->get(\'filename\');\\n    $itemArray[\'filesize\'] = $item->get(\'filesize\');\\n    $itemArray[\'thumbnail\'] = $item->get(\'thumbnail\',$thumbProperties);\\n    $itemArray[\'image\'] = $item->get(\'thumbnail\',$imageProperties);\\n    $itemArray[\'image_attributes\'] = $imageAttributes;\\n    $itemArray[\'link_attributes\'] = $linkAttributes;\\n    if (!empty($scriptProperties[\'album\'])) $itemArray[\'album\'] = $scriptProperties[\'album\'];\\n    if (!empty($scriptProperties[\'tag\'])) $itemArray[\'tag\'] = $scriptProperties[\'tag\'];\\n    $itemArray[\'linkToImage\'] = $linkToImage;\\n    $itemArray[\'url\'] = $item->get(\'url\');\\n    $itemArray[\'imageGetParam\'] = $imageGetParam;\\n    $itemArray[\'albumRequestVar\'] = $albumRequestVar;\\n    $itemArray[\'tagRequestVar\'] = $tagRequestVar;\\n    $itemArray[\'tag\'] = \'\';\\n    if ($plugin) {\\n        $plugin->renderItem($itemArray);\\n    }\\n\\n    $thumbTpl = $defaultThumbTpl;\\n    if (isset($nthTpls[$idx])) {\\n        $thumbTpl = $nthTpls[$idx];\\n    } else {\\n        foreach ($nthTpls as $int => $tpl) {\\n            if ( ($idx % $int) === 0 ) $thumbTpl = $tpl;\\n        }\\n    }\\n\\n    $output[] = $gallery->getChunk($thumbTpl,$itemArray);\\n\\n    $idx++;\\n}\\n$output = implode(\\"\\\\n\\",$output);\\n\\n\\/* if set, place in a container tpl *\\/\\n$containerTpl = $modx->getOption(\'containerTpl\',$scriptProperties,false);\\nif (!empty($containerTpl)) {\\n    $ct = $gallery->getChunk($containerTpl,array(\\n        \'thumbnails\' => $output,\\n        \'album_name\' => $data[\'album\'][\'name\'],\\n        \'album_description\' => $data[\'album\'][\'description\'],\\n        \'album_year\' => $data[\'album\'][\'year\'] ?? \'\',\\n        \'albumRequestVar\' => $albumRequestVar,\\n        \'albumId\' => $data[\'album\'][\'id\'],\\n    ));\\n    if (!empty($ct)) $output = $ct;\\n}\\n\\n\\/* set to placeholders or output directly *\\/\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\nif (!empty($toPlaceholder)) {\\n    $modx->toPlaceholders(array(\\n        $toPlaceholder => $output,\\n        $toPlaceholder.\'.id\' => $data[\'album\'][\'id\'],\\n        $toPlaceholder.\'.name\' => $data[\'album\'][\'name\'],\\n        $toPlaceholder.\'.year\' => $data[\'album\'][\'year\'] ?? \'\',\\n        $toPlaceholder.\'.description\' => $data[\'album\'][\'description\'],\\n        $toPlaceholder.\'.total\' => $data[\'total\'],\\n        $toPlaceholder.\'.next\' => $data[\'album\'][\'id\'] + 1,\\n        $toPlaceholder.\'.prev\' => $data[\'album\'][\'id\'] - 1,\\n    ));\\n} else {\\n    $placeholderPrefix = $modx->getOption(\'placeholderPrefix\',$scriptProperties,\'gallery.\');\\n    $modx->toPlaceholders(array(\\n        $placeholderPrefix.\'id\' => $data[\'album\'][\'id\'],\\n        $placeholderPrefix.\'name\' => $data[\'album\'][\'name\'],\\n        $placeholderPrefix.\'year\' => $data[\'album\'][\'year\'] ?? \'\',\\n        $placeholderPrefix.\'description\' => $data[\'album\'][\'description\'],\\n        $placeholderPrefix.\'total\' => $data[\'total\'],\\n        $placeholderPrefix.\'next\' => $data[\'album\'][\'id\'] + 1,\\n        $placeholderPrefix.\'prev\' => $data[\'album\'][\'id\'] - 1,\\n    ));\\n    return $output;\\n}\\nreturn \'\';"}',
        'guid' => '3c6a5bbc743cd941cff409e61dbecdae',
        'native_key' => NULL,
        'signature' => '5465d4973dd2e8fb91df3ca097426ada',
      ),
      'ab1c62611d96b131196cc44132ab4da6' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"GalleryAlbums","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Gallery\\n *\\n * Copyright 2010-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * Gallery is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Gallery is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Gallery; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package gallery\\n *\\/\\n\\/**\\n * Loads a list of Albums\\n *\\n * @var modX $modx\\n * @var Gallery $gallery\\n * @package gallery\\n *\\/\\n\\/** @noinspection PhpUndefinedVariableInspection *\\/\\n$gallery = $modx->getService(\'gallery\',\'Gallery\',$modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\').\'model\\/gallery\\/\',$scriptProperties);\\nif (!($gallery instanceof Gallery)) return \'\';\\n\\n\\/* setup default properties *\\/\\n$rowTpl = $modx->getOption(\'rowTpl\',$scriptProperties,\'galAlbumRowTpl\');\\n$rowCls = $modx->getOption(\'rowCls\',$scriptProperties,\'\');\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\n$showAll = $modx->getOption(\'showAll\',$scriptProperties,false);\\n$albumRequestVar = $modx->getOption(\'albumRequestVar\',$scriptProperties,\'galAlbum\');\\n$albumCoverSort = $modx->getOption(\'albumCoverSort\',$scriptProperties,\'rank\');\\n$albumCoverSortDir = $modx->getOption(\'albumCoverSortDir\',$scriptProperties,\'ASC\');\\n$showName = $modx->getOption(\'showName\',$scriptProperties,true);\\n\\n$totalProperties = $scriptProperties;\\n$totalProperties[\'limit\'] = \'0\';\\n$totalProperties[\'start\'] = \'0\';\\n$totalAlbums = $modx->call(\'galAlbum\', \'getList\', array(&$modx, $totalProperties));\\n$totalVar = $modx->getOption(\'totalVar\', $scriptProperties, \'total\');\\n$modx->setPlaceholder($totalVar, count($totalAlbums));\\n\\n\\/* build query *\\/\\n$albums = $modx->call(\'galAlbum\',\'getList\',array(&$modx,$scriptProperties));\\n\\n\\/* handle sorting for album cover *\\/\\nif ($albumCoverSort == \'rank\') {\\n    $albumCoverSort = \'AlbumItems.rank\';\\n}\\nif (in_array(strtolower($albumCoverSort),array(\'random\',\'rand()\',\'rand\'))) {\\n    $albumCoverSort = \'RAND()\';\\n    $albumCoverSortDir = \'\';\\n}\\n\\n\\/* get thumb properties for album cover *\\/\\n$thumbProperties = $modx->getOption(\'thumbProperties\',$scriptProperties,\'\');\\n$thumbProperties = !empty($thumbProperties) ? $modx->fromJSON($thumbProperties) : array();\\n$thumbProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'thumbWidth\',$scriptProperties,100),\\n    \'h\' => (int)$modx->getOption(\'thumbHeight\',$scriptProperties,100),\\n    \'zc\' => (string)$modx->getOption(\'thumbZoomCrop\',$scriptProperties,1),\\n    \'far\' => (string)$modx->getOption(\'thumbFar\',$scriptProperties,\'C\'),\\n    \'q\' => (int)$modx->getOption(\'thumbQuality\',$scriptProperties,90),\\n),$thumbProperties);\\n\\n\\/* iterate *\\/\\n$output = array();\\n$idx = 0;\\n$filesUrl = $modx->call(\'galAlbum\',\'getFilesUrl\',array(&$modx));\\n$nav = array();\\n\\/** @var galAlbum $album *\\/\\nforeach ($albums as $album) {\\n    $albumArray = $album->toArray();\\n    $classes = array($rowCls);\\n\\n    if (!isset($nav[\'first\'])) {\\n        $nav[\'first\'] = $albumArray[\'id\'];\\n    }\\n    if (!isset($nav[\'next\']) && isset($nav[\'current\'])) {\\n        $nav[\'next\'] = $albumArray[\'id\'];\\n    }\\n    if (isset($_GET[$albumRequestVar]) && $_GET[$albumRequestVar] == $albumArray[\'id\']) {\\n        $nav[\'current\'] = $albumArray[\'id\'];\\n        $nav[\'curIdx\'] = $idx + 1;\\n        $classes[] = \'current\';\\n    }\\n    if (!isset($nav[\'current\'])) {\\n        $nav[\'prev\'] = $albumArray[\'id\'];\\n    }\\n    $nav[\'last\'] = $albumArray[\'id\'];\\n\\n    $albumArray[\'cls\'] = implode(\' \', $classes);\\n    $albumArray[\'idx\'] = $idx;\\n    $albumArray[\'showName\'] = $showName;\\n    $albumArray[\'albumRequestVar\'] = $albumRequestVar;\\n    $coverItem = $album->getCoverItem($albumCoverSort,$albumCoverSortDir);\\n    if ($coverItem) {\\n        $albumArray[\'image\'] = $coverItem->get(\'thumbnail\',$thumbProperties);\\n        $albumArray[\'image_absolute\'] = $filesUrl.$coverItem->get(\'filename\');\\n        $albumArray[\'total\'] = $coverItem->get(\'total\');\\n    }\\n\\n    $albumArray[\'cls\'] = implode(\' \', $classes);\\n    $albumArray[\'idx\'] = $idx;\\n    $albumArray[\'showName\'] = $showName;\\n    $albumArray[\'albumRequestVar\'] = $albumRequestVar;\\n    $output[] = $gallery->getChunk($rowTpl,$albumArray);\\n    $idx++;\\n}\\nif (!isset($nav[\'current\'])) {\\n    unset($nav[\'prev\']);\\n}\\n$nav[\'count\'] = $idx;\\n\\n\\/* set output to placeholder or return *\\/\\n$outputSeparator = $modx->getOption(\'outputSeparator\',$scriptProperties,\\"\\\\n\\");\\n$output = implode($outputSeparator,$output);\\n\\n\\/* if set, place in a container tpl *\\/\\n$containerTpl = $modx->getOption(\'containerTpl\',$scriptProperties,false);\\nif (!empty($containerTpl)) {\\n    $ct = $gallery->getChunk($containerTpl,array(\\n        \'albums\' => $output,\\n        \'nav\' => $nav,\\n        \'albumRequestVar\' => $albumRequestVar\\n    ));\\n    if (!empty($ct)) $output = $ct;\\n}\\n\\nif ($toPlaceholder) {\\n    $modx->setPlaceholder($toPlaceholder,$output);\\n    return \'\';\\n}\\nreturn $output;","locked":0,"properties":"a:21:{s:6:\\"rowTpl\\";a:7:{s:4:\\"name\\";s:6:\\"rowTpl\\";s:4:\\"desc\\";s:25:\\"galleryalbums.rowtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:14:\\"galAlbumRowTpl\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"rowCls\\";a:7:{s:4:\\"name\\";s:6:\\"rowCls\\";s:4:\\"desc\\";s:25:\\"galleryalbums.rowcls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"sort\\";a:7:{s:4:\\"name\\";s:4:\\"sort\\";s:4:\\"desc\\";s:23:\\"galleryalbums.sort_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"rank\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"dir\\";a:7:{s:4:\\"name\\";s:3:\\"dir\\";s:4:\\"desc\\";s:22:\\"galleryalbums.dir_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"DESC\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:24:\\"galleryalbums.limit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:2:\\"10\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"start\\";a:7:{s:4:\\"name\\";s:5:\\"start\\";s:4:\\"desc\\";s:24:\\"galleryalbums.start_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:32:\\"galleryalbums.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"showInactive\\";a:7:{s:4:\\"name\\";s:12:\\"showInactive\\";s:4:\\"desc\\";s:31:\\"galleryalbums.showinactive_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"prominentOnly\\";a:7:{s:4:\\"name\\";s:13:\\"prominentOnly\\";s:4:\\"desc\\";s:32:\\"galleryalbums.prominentonly_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"parent\\";a:7:{s:4:\\"name\\";s:6:\\"parent\\";s:4:\\"desc\\";s:25:\\"galleryalbums.parent_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"showAll\\";a:7:{s:4:\\"name\\";s:7:\\"showAll\\";s:4:\\"desc\\";s:26:\\"galleryalbums.showall_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"showName\\";a:7:{s:4:\\"name\\";s:8:\\"showName\\";s:4:\\"desc\\";s:27:\\"galleryalbums.showname_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"albumRequestVar\\";a:7:{s:4:\\"name\\";s:15:\\"albumRequestVar\\";s:4:\\"desc\\";s:34:\\"galleryalbums.albumrequestvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:8:\\"galAlbum\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"albumCoverSort\\";a:7:{s:4:\\"name\\";s:14:\\"albumCoverSort\\";s:4:\\"desc\\";s:33:\\"galleryalbums.albumcoversort_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"rank\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"albumCoverSortDir\\";a:7:{s:4:\\"name\\";s:17:\\"albumCoverSortDir\\";s:4:\\"desc\\";s:36:\\"galleryalbums.albumcoversortdir_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"thumbWidth\\";a:7:{s:4:\\"name\\";s:10:\\"thumbWidth\\";s:4:\\"desc\\";s:29:\\"galleryalbums.thumbwidth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"100\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"thumbHeight\\";a:7:{s:4:\\"name\\";s:11:\\"thumbHeight\\";s:4:\\"desc\\";s:30:\\"galleryalbums.thumbheight_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"100\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"thumbZoomCrop\\";a:7:{s:4:\\"name\\";s:13:\\"thumbZoomCrop\\";s:4:\\"desc\\";s:32:\\"galleryalbums.thumbzoomcrop_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"thumbFar\\";a:7:{s:4:\\"name\\";s:8:\\"thumbFar\\";s:4:\\"desc\\";s:27:\\"galleryalbums.thumbfar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"C\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"thumbQuality\\";a:7:{s:4:\\"name\\";s:12:\\"thumbQuality\\";s:4:\\"desc\\";s:31:\\"galleryalbums.thumbquality_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:90;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"thumbProperties\\";a:7:{s:4:\\"name\\";s:15:\\"thumbProperties\\";s:4:\\"desc\\";s:34:\\"galleryalbums.thumbproperties_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Gallery\\n *\\n * Copyright 2010-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * Gallery is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Gallery is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Gallery; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package gallery\\n *\\/\\n\\/**\\n * Loads a list of Albums\\n *\\n * @var modX $modx\\n * @var Gallery $gallery\\n * @package gallery\\n *\\/\\n\\/** @noinspection PhpUndefinedVariableInspection *\\/\\n$gallery = $modx->getService(\'gallery\',\'Gallery\',$modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\').\'model\\/gallery\\/\',$scriptProperties);\\nif (!($gallery instanceof Gallery)) return \'\';\\n\\n\\/* setup default properties *\\/\\n$rowTpl = $modx->getOption(\'rowTpl\',$scriptProperties,\'galAlbumRowTpl\');\\n$rowCls = $modx->getOption(\'rowCls\',$scriptProperties,\'\');\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\n$showAll = $modx->getOption(\'showAll\',$scriptProperties,false);\\n$albumRequestVar = $modx->getOption(\'albumRequestVar\',$scriptProperties,\'galAlbum\');\\n$albumCoverSort = $modx->getOption(\'albumCoverSort\',$scriptProperties,\'rank\');\\n$albumCoverSortDir = $modx->getOption(\'albumCoverSortDir\',$scriptProperties,\'ASC\');\\n$showName = $modx->getOption(\'showName\',$scriptProperties,true);\\n\\n$totalProperties = $scriptProperties;\\n$totalProperties[\'limit\'] = \'0\';\\n$totalProperties[\'start\'] = \'0\';\\n$totalAlbums = $modx->call(\'galAlbum\', \'getList\', array(&$modx, $totalProperties));\\n$totalVar = $modx->getOption(\'totalVar\', $scriptProperties, \'total\');\\n$modx->setPlaceholder($totalVar, count($totalAlbums));\\n\\n\\/* build query *\\/\\n$albums = $modx->call(\'galAlbum\',\'getList\',array(&$modx,$scriptProperties));\\n\\n\\/* handle sorting for album cover *\\/\\nif ($albumCoverSort == \'rank\') {\\n    $albumCoverSort = \'AlbumItems.rank\';\\n}\\nif (in_array(strtolower($albumCoverSort),array(\'random\',\'rand()\',\'rand\'))) {\\n    $albumCoverSort = \'RAND()\';\\n    $albumCoverSortDir = \'\';\\n}\\n\\n\\/* get thumb properties for album cover *\\/\\n$thumbProperties = $modx->getOption(\'thumbProperties\',$scriptProperties,\'\');\\n$thumbProperties = !empty($thumbProperties) ? $modx->fromJSON($thumbProperties) : array();\\n$thumbProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'thumbWidth\',$scriptProperties,100),\\n    \'h\' => (int)$modx->getOption(\'thumbHeight\',$scriptProperties,100),\\n    \'zc\' => (string)$modx->getOption(\'thumbZoomCrop\',$scriptProperties,1),\\n    \'far\' => (string)$modx->getOption(\'thumbFar\',$scriptProperties,\'C\'),\\n    \'q\' => (int)$modx->getOption(\'thumbQuality\',$scriptProperties,90),\\n),$thumbProperties);\\n\\n\\/* iterate *\\/\\n$output = array();\\n$idx = 0;\\n$filesUrl = $modx->call(\'galAlbum\',\'getFilesUrl\',array(&$modx));\\n$nav = array();\\n\\/** @var galAlbum $album *\\/\\nforeach ($albums as $album) {\\n    $albumArray = $album->toArray();\\n    $classes = array($rowCls);\\n\\n    if (!isset($nav[\'first\'])) {\\n        $nav[\'first\'] = $albumArray[\'id\'];\\n    }\\n    if (!isset($nav[\'next\']) && isset($nav[\'current\'])) {\\n        $nav[\'next\'] = $albumArray[\'id\'];\\n    }\\n    if (isset($_GET[$albumRequestVar]) && $_GET[$albumRequestVar] == $albumArray[\'id\']) {\\n        $nav[\'current\'] = $albumArray[\'id\'];\\n        $nav[\'curIdx\'] = $idx + 1;\\n        $classes[] = \'current\';\\n    }\\n    if (!isset($nav[\'current\'])) {\\n        $nav[\'prev\'] = $albumArray[\'id\'];\\n    }\\n    $nav[\'last\'] = $albumArray[\'id\'];\\n\\n    $albumArray[\'cls\'] = implode(\' \', $classes);\\n    $albumArray[\'idx\'] = $idx;\\n    $albumArray[\'showName\'] = $showName;\\n    $albumArray[\'albumRequestVar\'] = $albumRequestVar;\\n    $coverItem = $album->getCoverItem($albumCoverSort,$albumCoverSortDir);\\n    if ($coverItem) {\\n        $albumArray[\'image\'] = $coverItem->get(\'thumbnail\',$thumbProperties);\\n        $albumArray[\'image_absolute\'] = $filesUrl.$coverItem->get(\'filename\');\\n        $albumArray[\'total\'] = $coverItem->get(\'total\');\\n    }\\n\\n    $albumArray[\'cls\'] = implode(\' \', $classes);\\n    $albumArray[\'idx\'] = $idx;\\n    $albumArray[\'showName\'] = $showName;\\n    $albumArray[\'albumRequestVar\'] = $albumRequestVar;\\n    $output[] = $gallery->getChunk($rowTpl,$albumArray);\\n    $idx++;\\n}\\nif (!isset($nav[\'current\'])) {\\n    unset($nav[\'prev\']);\\n}\\n$nav[\'count\'] = $idx;\\n\\n\\/* set output to placeholder or return *\\/\\n$outputSeparator = $modx->getOption(\'outputSeparator\',$scriptProperties,\\"\\\\n\\");\\n$output = implode($outputSeparator,$output);\\n\\n\\/* if set, place in a container tpl *\\/\\n$containerTpl = $modx->getOption(\'containerTpl\',$scriptProperties,false);\\nif (!empty($containerTpl)) {\\n    $ct = $gallery->getChunk($containerTpl,array(\\n        \'albums\' => $output,\\n        \'nav\' => $nav,\\n        \'albumRequestVar\' => $albumRequestVar\\n    ));\\n    if (!empty($ct)) $output = $ct;\\n}\\n\\nif ($toPlaceholder) {\\n    $modx->setPlaceholder($toPlaceholder,$output);\\n    return \'\';\\n}\\nreturn $output;"}',
        'guid' => 'ff04d1dc8954487e6afe9d4f961fb96a',
        'native_key' => NULL,
        'signature' => '97f2bd017031d5872c19905063ac23c0',
      ),
      '62cbc945f15d3c2575955da67b1d91df' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"GalleryItem","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Gallery\\n *\\n * Copyright 2010-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * Gallery is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Gallery is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Gallery; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package gallery\\n *\\/\\n\\/**\\n * Display a single Gallery Item\\n *\\n * @package gallery\\n *\\/\\n$gallery = $modx->getService(\'gallery\',\'Gallery\',$modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\').\'model\\/gallery\\/\',$scriptProperties);\\nif (!($gallery instanceof Gallery)) return \'\';\\n\\n\\/* get ID of item *\\/\\n$id = (int)$modx->getOption(\'id\',$scriptProperties,false);\\nif ($modx->getOption(\'checkForRequestVar\',$scriptProperties,true)) {\\n    $getParam = $modx->getOption(\'getParam\',$scriptProperties,\'galItem\');\\n    if (!empty($_REQUEST[$getParam])) { $id = (int)$_REQUEST[$getParam]; }\\n}\\nif (empty($id)) return \'\';\\n\\n\\/* setup default properties *\\/\\n$tpl = $modx->getOption(\'tpl\',$scriptProperties,\'galItem\');\\n$toPlaceholders = $modx->getOption(\'toPlaceholders\',$scriptProperties,true);\\n$toPlaceholdersPrefix = $modx->getOption(\'toPlaceholdersPrefix\',$scriptProperties,\'galitem\');\\n$albumTpl = $modx->getOption(\'albumTpl\',$scriptProperties,\'galItemAlbum\');\\n$albumSeparator = $modx->getOption(\'albumSeparator\',$scriptProperties,\',&nbsp;\');\\n$albumRequestVar = $modx->getOption(\'albumRequestVar\',$scriptProperties,\'galAlbum\');\\n$tagTpl = $modx->getOption(\'tagTpl\',$scriptProperties,\'galItemTag\');\\n$tagSeparator = $modx->getOption(\'tagSeparator\',$scriptProperties,\',&nbsp;\');\\n$tagSortDir = $modx->getOption(\'tagSortDir\',$scriptProperties,\'DESC\');\\n$tagRequestVar = $modx->getOption(\'tagRequestVar\',$scriptProperties,\'galTag\');\\n\\/* get item *\\/\\n$c = $modx->newQuery(\'galItem\');\\n$c->select($modx->getSelectColumns(\'galItem\',\'galItem\'));\\n$c->where(array(\\n    \'id\' => $id,\\n));\\n$item = $modx->getObject(\'galItem\',$c);\\nif (empty($item)) return \'\';\\n\\n\\/* setup placeholders *\\/\\n$itemArray = $item->toArray();\\n$itemArray[\'filename\'] = basename($item->get(\'filename\'));\\n$itemArray[\'filesize\'] = $item->get(\'filesize\');\\n\\n\\/* get image+thumbnail *\\/\\n$thumbProperties = $modx->getOption(\'thumbProperties\',$scriptProperties,\'\');\\n$thumbProperties = !empty($thumbProperties) ? $modx->fromJSON($thumbProperties) : array();\\n$thumbProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'thumbWidth\',$scriptProperties,100),\\n    \'h\' => (int)$modx->getOption(\'thumbHeight\',$scriptProperties,100),\\n    \'zc\' => (boolean)$modx->getOption(\'thumbZoomCrop\',$scriptProperties,0),\\n    \'far\' => (string)$modx->getOption(\'thumbFar\',$scriptProperties,\'C\'),\\n    \'q\' => (int)$modx->getOption(\'thumbQuality\',$scriptProperties,90),\\n),$thumbProperties);\\n$itemArray[\'thumbnail\'] = $item->get(\'thumbnail\',$thumbProperties);\\n\\n$imageProperties = $modx->getOption(\'imageProperties\',$scriptProperties,\'\');\\n$imageProperties = !empty($imageProperties) ? $modx->fromJSON($imageProperties) : array();\\n$imageProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'imageWidth\',$scriptProperties,500),\\n    \'h\' => (int)$modx->getOption(\'imageHeight\',$scriptProperties,500),\\n    \'zc\' => (boolean)$modx->getOption(\'imageZoomCrop\',$scriptProperties,0),\\n    \'far\' => (string)$modx->getOption(\'imageFar\',$scriptProperties,false),\\n    \'q\' => (int)$modx->getOption(\'imageQuality\',$scriptProperties,90),\\n),$imageProperties);\\n$itemArray[\'image\'] = $item->get(\'thumbnail\',$imageProperties);\\n\\n\\/* get albums *\\/\\n$c = $modx->newQuery(\'galAlbum\');\\n$c->innerJoin(\'galAlbumItem\',\'AlbumItems\',$modx->getSelectColumns(\'galAlbumItem\',\'AlbumItems\',\'\',array(\'album\')).\' = \'.$modx->getSelectColumns(\'galAlbum\',\'galAlbum\',\'\',array(\'id\'))\\n    .\' AND \'.$modx->getSelectColumns(\'galAlbumItem\',\'AlbumItems\',\'\',array(\'item\')).\' = \'.$item->get(\'id\'));\\n$c->sortby(\'AlbumItems.rank\',\'ASC\');\\n$albums = $modx->getCollection(\'galAlbum\',$c);\\n$itemArray[\'albums\'] = array();\\n$i = 0;\\nforeach ($albums as $album) {\\n    $albumArray = $album->toArray(\'\',true,true);\\n    $albumArray[\'idx\'] = $i;\\n    $albumArray[\'albumRequestVar\'] = $albumRequestVar;\\n    $itemArray[\'albums\'][] = $gallery->getChunk($albumTpl,$albumArray);\\n    $i++;\\n}\\n$itemArray[\'albums\'] = implode($albumSeparator,$itemArray[\'albums\']);\\n\\n\\/* get tags *\\/\\n$c = $modx->newQuery(\'galTag\');\\n$c->where(array(\\n    \'item\' => $item->get(\'id\'),\\n));\\n$c->sortby(\'tag\',$tagSortDir);\\n$tags = $modx->getCollection(\'galTag\',$c);\\n$i = 0;\\n$itemArray[\'tags\'] = array();\\nforeach ($tags as $tag) {\\n    $tagArray = $tag->toArray();\\n    $tagArray[\'idx\'] = $i;\\n    $tagArray[\'tagRequestVar\'] = $tagRequestVar;\\n    $itemArray[\'tags\'][] = $gallery->getChunk($tagTpl,$tagArray);\\n    $i++;\\n}\\n$itemArray[\'tags\'] = implode($tagSeparator,$itemArray[\'tags\']);\\n\\n\\/* if outputting to placeholders, use this, otherwise, use tpl *\\/\\nif ($toPlaceholders) {\\n    $modx->toPlaceholders($itemArray,$toPlaceholdersPrefix);\\n    return \'\';\\n}\\n\\nif (empty($tpl)) return \'\';\\n$output .= $gallery->getChunk($tpl,$itemArray);\\nreturn $output;","locked":0,"properties":"a:23:{s:2:\\"id\\";a:7:{s:4:\\"name\\";s:2:\\"id\\";s:4:\\"desc\\";s:19:\\"galleryitem.id_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"toPlaceholders\\";a:7:{s:4:\\"name\\";s:14:\\"toPlaceholders\\";s:4:\\"desc\\";s:31:\\"galleryitem.toplaceholders_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:20:\\"toPlaceholdersPrefix\\";a:7:{s:4:\\"name\\";s:20:\\"toPlaceholdersPrefix\\";s:4:\\"desc\\";s:37:\\"galleryitem.toplaceholdersprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:7:\\"galitem\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:20:\\"galleryitem.tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:7:\\"galItem\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"albumTpl\\";a:7:{s:4:\\"name\\";s:8:\\"albumTpl\\";s:4:\\"desc\\";s:25:\\"galleryitem.albumtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:12:\\"galItemAlbum\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"albumSeparator\\";a:7:{s:4:\\"name\\";s:14:\\"albumSeparator\\";s:4:\\"desc\\";s:31:\\"galleryitem.albumseparator_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:7:\\",&nbsp;\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"albumRequestVar\\";a:7:{s:4:\\"name\\";s:15:\\"albumRequestVar\\";s:4:\\"desc\\";s:32:\\"galleryitem.albumrequestvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:8:\\"galAlbum\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"tagTpl\\";a:7:{s:4:\\"name\\";s:6:\\"tagTpl\\";s:4:\\"desc\\";s:23:\\"galleryitem.tagtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:10:\\"galItemTag\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"tagSeparator\\";a:7:{s:4:\\"name\\";s:12:\\"tagSeparator\\";s:4:\\"desc\\";s:29:\\"galleryitem.tagseparator_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:7:\\",&nbsp;\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"tagSortDir\\";a:7:{s:4:\\"name\\";s:10:\\"tagSortDir\\";s:4:\\"desc\\";s:27:\\"galleryitem.tagsortdir_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"DESC\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"tagRequestVar\\";a:7:{s:4:\\"name\\";s:13:\\"tagRequestVar\\";s:4:\\"desc\\";s:30:\\"galleryitem.tagrequestvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:6:\\"galTag\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"thumbWidth\\";a:7:{s:4:\\"name\\";s:10:\\"thumbWidth\\";s:4:\\"desc\\";s:27:\\"galleryitem.thumbwidth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"100\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"thumbHeight\\";a:7:{s:4:\\"name\\";s:11:\\"thumbHeight\\";s:4:\\"desc\\";s:28:\\"galleryitem.thumbheight_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"100\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"thumbZoomCrop\\";a:7:{s:4:\\"name\\";s:13:\\"thumbZoomCrop\\";s:4:\\"desc\\";s:30:\\"galleryitem.thumbzoomcrop_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"thumbFar\\";a:7:{s:4:\\"name\\";s:8:\\"thumbFar\\";s:4:\\"desc\\";s:25:\\"galleryitem.thumbfar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"C\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"thumbQuality\\";a:7:{s:4:\\"name\\";s:12:\\"thumbQuality\\";s:4:\\"desc\\";s:29:\\"galleryitem.thumbquality_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:90;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"thumbProperties\\";a:7:{s:4:\\"name\\";s:15:\\"thumbProperties\\";s:4:\\"desc\\";s:32:\\"galleryitem.thumbproperties_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"imageWidth\\";a:7:{s:4:\\"name\\";s:10:\\"imageWidth\\";s:4:\\"desc\\";s:27:\\"galleryitem.imagewidth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"imageHeight\\";a:7:{s:4:\\"name\\";s:11:\\"imageHeight\\";s:4:\\"desc\\";s:28:\\"galleryitem.imageheight_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"imageZoomCrop\\";a:7:{s:4:\\"name\\";s:13:\\"imageZoomCrop\\";s:4:\\"desc\\";s:30:\\"galleryitem.imagezoomcrop_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"imageFar\\";a:7:{s:4:\\"name\\";s:8:\\"imageFar\\";s:4:\\"desc\\";s:25:\\"galleryitem.imagefar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"imageQuality\\";a:7:{s:4:\\"name\\";s:12:\\"imageQuality\\";s:4:\\"desc\\";s:29:\\"galleryitem.imagequality_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:90;s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"imageProperties\\";a:7:{s:4:\\"name\\";s:15:\\"imageProperties\\";s:4:\\"desc\\";s:32:\\"galleryitem.imageproperties_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:18:\\"gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Gallery\\n *\\n * Copyright 2010-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * Gallery is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Gallery is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Gallery; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package gallery\\n *\\/\\n\\/**\\n * Display a single Gallery Item\\n *\\n * @package gallery\\n *\\/\\n$gallery = $modx->getService(\'gallery\',\'Gallery\',$modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\').\'model\\/gallery\\/\',$scriptProperties);\\nif (!($gallery instanceof Gallery)) return \'\';\\n\\n\\/* get ID of item *\\/\\n$id = (int)$modx->getOption(\'id\',$scriptProperties,false);\\nif ($modx->getOption(\'checkForRequestVar\',$scriptProperties,true)) {\\n    $getParam = $modx->getOption(\'getParam\',$scriptProperties,\'galItem\');\\n    if (!empty($_REQUEST[$getParam])) { $id = (int)$_REQUEST[$getParam]; }\\n}\\nif (empty($id)) return \'\';\\n\\n\\/* setup default properties *\\/\\n$tpl = $modx->getOption(\'tpl\',$scriptProperties,\'galItem\');\\n$toPlaceholders = $modx->getOption(\'toPlaceholders\',$scriptProperties,true);\\n$toPlaceholdersPrefix = $modx->getOption(\'toPlaceholdersPrefix\',$scriptProperties,\'galitem\');\\n$albumTpl = $modx->getOption(\'albumTpl\',$scriptProperties,\'galItemAlbum\');\\n$albumSeparator = $modx->getOption(\'albumSeparator\',$scriptProperties,\',&nbsp;\');\\n$albumRequestVar = $modx->getOption(\'albumRequestVar\',$scriptProperties,\'galAlbum\');\\n$tagTpl = $modx->getOption(\'tagTpl\',$scriptProperties,\'galItemTag\');\\n$tagSeparator = $modx->getOption(\'tagSeparator\',$scriptProperties,\',&nbsp;\');\\n$tagSortDir = $modx->getOption(\'tagSortDir\',$scriptProperties,\'DESC\');\\n$tagRequestVar = $modx->getOption(\'tagRequestVar\',$scriptProperties,\'galTag\');\\n\\/* get item *\\/\\n$c = $modx->newQuery(\'galItem\');\\n$c->select($modx->getSelectColumns(\'galItem\',\'galItem\'));\\n$c->where(array(\\n    \'id\' => $id,\\n));\\n$item = $modx->getObject(\'galItem\',$c);\\nif (empty($item)) return \'\';\\n\\n\\/* setup placeholders *\\/\\n$itemArray = $item->toArray();\\n$itemArray[\'filename\'] = basename($item->get(\'filename\'));\\n$itemArray[\'filesize\'] = $item->get(\'filesize\');\\n\\n\\/* get image+thumbnail *\\/\\n$thumbProperties = $modx->getOption(\'thumbProperties\',$scriptProperties,\'\');\\n$thumbProperties = !empty($thumbProperties) ? $modx->fromJSON($thumbProperties) : array();\\n$thumbProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'thumbWidth\',$scriptProperties,100),\\n    \'h\' => (int)$modx->getOption(\'thumbHeight\',$scriptProperties,100),\\n    \'zc\' => (boolean)$modx->getOption(\'thumbZoomCrop\',$scriptProperties,0),\\n    \'far\' => (string)$modx->getOption(\'thumbFar\',$scriptProperties,\'C\'),\\n    \'q\' => (int)$modx->getOption(\'thumbQuality\',$scriptProperties,90),\\n),$thumbProperties);\\n$itemArray[\'thumbnail\'] = $item->get(\'thumbnail\',$thumbProperties);\\n\\n$imageProperties = $modx->getOption(\'imageProperties\',$scriptProperties,\'\');\\n$imageProperties = !empty($imageProperties) ? $modx->fromJSON($imageProperties) : array();\\n$imageProperties = array_merge(array(\\n    \'w\' => (int)$modx->getOption(\'imageWidth\',$scriptProperties,500),\\n    \'h\' => (int)$modx->getOption(\'imageHeight\',$scriptProperties,500),\\n    \'zc\' => (boolean)$modx->getOption(\'imageZoomCrop\',$scriptProperties,0),\\n    \'far\' => (string)$modx->getOption(\'imageFar\',$scriptProperties,false),\\n    \'q\' => (int)$modx->getOption(\'imageQuality\',$scriptProperties,90),\\n),$imageProperties);\\n$itemArray[\'image\'] = $item->get(\'thumbnail\',$imageProperties);\\n\\n\\/* get albums *\\/\\n$c = $modx->newQuery(\'galAlbum\');\\n$c->innerJoin(\'galAlbumItem\',\'AlbumItems\',$modx->getSelectColumns(\'galAlbumItem\',\'AlbumItems\',\'\',array(\'album\')).\' = \'.$modx->getSelectColumns(\'galAlbum\',\'galAlbum\',\'\',array(\'id\'))\\n    .\' AND \'.$modx->getSelectColumns(\'galAlbumItem\',\'AlbumItems\',\'\',array(\'item\')).\' = \'.$item->get(\'id\'));\\n$c->sortby(\'AlbumItems.rank\',\'ASC\');\\n$albums = $modx->getCollection(\'galAlbum\',$c);\\n$itemArray[\'albums\'] = array();\\n$i = 0;\\nforeach ($albums as $album) {\\n    $albumArray = $album->toArray(\'\',true,true);\\n    $albumArray[\'idx\'] = $i;\\n    $albumArray[\'albumRequestVar\'] = $albumRequestVar;\\n    $itemArray[\'albums\'][] = $gallery->getChunk($albumTpl,$albumArray);\\n    $i++;\\n}\\n$itemArray[\'albums\'] = implode($albumSeparator,$itemArray[\'albums\']);\\n\\n\\/* get tags *\\/\\n$c = $modx->newQuery(\'galTag\');\\n$c->where(array(\\n    \'item\' => $item->get(\'id\'),\\n));\\n$c->sortby(\'tag\',$tagSortDir);\\n$tags = $modx->getCollection(\'galTag\',$c);\\n$i = 0;\\n$itemArray[\'tags\'] = array();\\nforeach ($tags as $tag) {\\n    $tagArray = $tag->toArray();\\n    $tagArray[\'idx\'] = $i;\\n    $tagArray[\'tagRequestVar\'] = $tagRequestVar;\\n    $itemArray[\'tags\'][] = $gallery->getChunk($tagTpl,$tagArray);\\n    $i++;\\n}\\n$itemArray[\'tags\'] = implode($tagSeparator,$itemArray[\'tags\']);\\n\\n\\/* if outputting to placeholders, use this, otherwise, use tpl *\\/\\nif ($toPlaceholders) {\\n    $modx->toPlaceholders($itemArray,$toPlaceholdersPrefix);\\n    return \'\';\\n}\\n\\nif (empty($tpl)) return \'\';\\n$output .= $gallery->getChunk($tpl,$itemArray);\\nreturn $output;"}',
        'guid' => '0af46c7767428b088ca7a3a0862b06db',
        'native_key' => NULL,
        'signature' => '590181617502d187fe2ccb0c198b2229',
      ),
    ),
    'Plugins' => 
    array (
      '5fbccbfd16a447ac27c80cdd784b3551' => 
      array (
        'unique_key' => 'name',
        'preserve_keys' => false,
        'update_object' => true,
        'related_objects' => 
        array (
          'PluginEvents' => 
          array (
            '16bf73371871964b0dbba6521d8359b4' => 
            array (
              'preserve_keys' => true,
              'update_object' => false,
              'unique_key' => 
              array (
                0 => 'pluginid',
                1 => 'event',
              ),
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnTVInputRenderList","priority":0,"propertyset":0}',
              'guid' => '92659a084b564d8ca62ceff341326b5e',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnTVInputRenderList',
              ),
              'signature' => 'de9c0d6e94632fe350cde8ebebab2904',
            ),
            '72c038d4b4f85ab9a7f6919e74e3abd0' => 
            array (
              'preserve_keys' => true,
              'update_object' => false,
              'unique_key' => 
              array (
                0 => 'pluginid',
                1 => 'event',
              ),
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnTVInputPropertiesList","priority":0,"propertyset":0}',
              'guid' => '8c2081a7e52ee51a1dbc2c8494bae0bd',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnTVInputPropertiesList',
              ),
              'signature' => '0c39fe59dc00e95096306174b59ee990',
            ),
            '8d67242d7c6a26ad3fcbcf1f69753268' => 
            array (
              'preserve_keys' => true,
              'update_object' => false,
              'unique_key' => 
              array (
                0 => 'pluginid',
                1 => 'event',
              ),
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnTVOutputRenderList","priority":0,"propertyset":0}',
              'guid' => '4fc493fae0134dbf9f77b4b88585ee48',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnTVOutputRenderList',
              ),
              'signature' => 'a0218764cd6267a732f0fcf3e23820e4',
            ),
            '3d448ccf1cfcc71a8f83c401ca99133f' => 
            array (
              'preserve_keys' => true,
              'update_object' => false,
              'unique_key' => 
              array (
                0 => 'pluginid',
                1 => 'event',
              ),
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnTVOutputRenderPropertiesList","priority":0,"propertyset":0}',
              'guid' => '8443d971442e4e09b92e5b3441169ca9',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnTVOutputRenderPropertiesList',
              ),
              'signature' => '8f839e2eb863c51f4530bb163366a19f',
            ),
            '5ac5f9db786ad411ced7b91420ec48ac' => 
            array (
              'preserve_keys' => true,
              'update_object' => false,
              'unique_key' => 
              array (
                0 => 'pluginid',
                1 => 'event',
              ),
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnDocFormPrerender","priority":0,"propertyset":0}',
              'guid' => '5ca2667c9f7a2813c3099f0cc393cf78',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnDocFormPrerender',
              ),
              'signature' => '4bda2a605f9562eb6428ddd6b6dba15a',
            ),
            '5de7ca417a58fd5cc62c4a1ba67fceec' => 
            array (
              'preserve_keys' => true,
              'update_object' => false,
              'unique_key' => 
              array (
                0 => 'pluginid',
                1 => 'event',
              ),
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnManagerPageBeforeRender","priority":0,"propertyset":0}',
              'guid' => '1238ee36390b60adb0e453bbf961e9d7',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnManagerPageBeforeRender',
              ),
              'signature' => 'b72a0eae54fc2e3607c01baa2fdb5f05',
            ),
          ),
        ),
        'related_object_attributes' => 
        array (
          'PluginEvents' => 
          array (
            'preserve_keys' => true,
            'update_object' => false,
            'unique_key' => 
            array (
              0 => 'pluginid',
              1 => 'event',
            ),
          ),
        ),
        'class' => 'modPlugin',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"GalleryCustomTV","description":"","editor_type":0,"category":0,"cache_type":0,"plugincode":"\\/**\\n * Handles plugin events for Gallery\'s Custom TV\\n *\\n * @package gallery\\n *\\/\\n\\/** @noinspection PhpUndefinedVariableInspection *\\/\\n$corePath = $modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\');\\nswitch ($modx->event->name) {\\n    case \'OnTVInputRenderList\':\\n        $modx->event->output($corePath.\'elements\\/tv\\/input\\/\');\\n        break;\\n    case \'OnTVOutputRenderList\':\\n        $modx->event->output($corePath.\'elements\\/tv\\/output\\/\');\\n        break;\\n    case \'OnTVInputPropertiesList\':\\n        $modx->event->output($corePath.\'elements\\/tv\\/inputoptions\\/\');\\n        break;\\n    case \'OnTVOutputRenderPropertiesList\':\\n        $modx->event->output($corePath.\'elements\\/tv\\/properties\\/\');\\n        break;\\n    case \'OnManagerPageBeforeRender\':\\n        \\/** @noinspection PhpUndefinedVariableInspection *\\/\\n        $gallery = $modx->getService(\'gallery\',\'Gallery\',$modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\').\'model\\/gallery\\/\',$scriptProperties);\\n        if (!($gallery instanceof Gallery)) return \'\';\\n\\n        $snippetIds = \'\';\\n        $gallerySnippet = $modx->getObject(\'modSnippet\',array(\'name\' => \'Gallery\'));\\n        if ($gallerySnippet) {\\n            $snippetIds .= \'GAL.snippetGallery = \\"\'.$gallerySnippet->get(\'id\').\'\\";\'.\\"\\\\n\\";\\n        }\\n        $galleryItemSnippet = $modx->getObject(\'modSnippet\',array(\'name\' => \'GalleryItem\'));\\n        if ($galleryItemSnippet) {\\n            $snippetIds .= \'GAL.snippetGalleryItem = \\"\'.$galleryItemSnippet->get(\'id\').\'\\";\'.\\"\\\\n\\";\\n        }\\n\\n        $jsDir = $modx->getOption(\'gallery.assets_url\',null,$modx->getOption(\'assets_url\').\'components\\/gallery\\/\').\'js\\/mgr\\/\';\\n        $modx->controller->addLexiconTopic(\'gallery:default\');\\n        $modx->controller->addJavascript($jsDir.\'gallery.js\');\\n        $modx->controller->addJavascript($jsDir.\'tree.js\');\\n        $modx->controller->addHtml(\'<script type=\\"text\\/javascript\\">\\n        Ext.onReady(function() {\\n            GAL.config.connector_url = \\"\'.$gallery->config[\'connectorUrl\'].\'\\";\\n            \'.$snippetIds.\'\\n        });\\n        <\\/script>\');\\n        break;\\n    case \'OnDocFormPrerender\':\\n        \\/** @noinspection PhpUndefinedVariableInspection *\\/\\n        $gallery = $modx->getService(\'gallery\',\'Gallery\',$modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\').\'model\\/gallery\\/\',$scriptProperties);\\n        if (!($gallery instanceof Gallery)) return \'\';\\n\\n        \\/* assign gallery lang to JS *\\/\\n        $modx->controller->addLexiconTopic(\'gallery:tv\');\\n\\n        \\/* @var modAction $action *\\/\\n        $action = null;\\n        if ($modx->getVersionData()[\'version\'] < 3){\\n            \\/\\/V2\\n            $action = $modx->getObject(\'modAction\',array(\\n                \'namespace\' => \'gallery\',\\n                \'controller\' => \'index\',\\n            ));\\n        }\\n\\n        $modx->controller->addHtml(\'<script type=\\"text\\/javascript\\">\\n        Ext.onReady(function() {\\n            GAL.config = {};\\n            GAL.config.connector_url = \\"\'.$gallery->config[\'connectorUrl\'].\'\\";\\n            GAL.action = \\"\'.($action ? $action->get(\'id\') : 0).\'\\";\\n        });\\n        <\\/script>\');\\n        $modx->controller->addJavascript($gallery->config[\'assetsUrl\'].\'js\\/mgr\\/tv\\/Spotlight.js\');\\n        $modx->controller->addJavascript($gallery->config[\'assetsUrl\'].\'js\\/mgr\\/gallery.js\');\\n        $modx->controller->addJavascript($gallery->config[\'assetsUrl\'].\'js\\/mgr\\/widgets\\/album\\/album.items.view.js\');\\n        $modx->controller->addJavascript($gallery->config[\'assetsUrl\'].\'js\\/mgr\\/widgets\\/album\\/album.tree.js\');\\n        $modx->controller->addJavascript($gallery->config[\'assetsUrl\'].\'js\\/mgr\\/tv\\/gal.browser.js\');\\n        $modx->controller->addJavascript($gallery->config[\'assetsUrl\'].\'js\\/mgr\\/tv\\/galtv.js\');\\n        $modx->controller->addCss($gallery->config[\'cssUrl\'].\'mgr.css\');\\n        break;\\n}\\nreturn;","locked":0,"properties":"a:0:{}","disabled":0,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Handles plugin events for Gallery\'s Custom TV\\n *\\n * @package gallery\\n *\\/\\n\\/** @noinspection PhpUndefinedVariableInspection *\\/\\n$corePath = $modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\');\\nswitch ($modx->event->name) {\\n    case \'OnTVInputRenderList\':\\n        $modx->event->output($corePath.\'elements\\/tv\\/input\\/\');\\n        break;\\n    case \'OnTVOutputRenderList\':\\n        $modx->event->output($corePath.\'elements\\/tv\\/output\\/\');\\n        break;\\n    case \'OnTVInputPropertiesList\':\\n        $modx->event->output($corePath.\'elements\\/tv\\/inputoptions\\/\');\\n        break;\\n    case \'OnTVOutputRenderPropertiesList\':\\n        $modx->event->output($corePath.\'elements\\/tv\\/properties\\/\');\\n        break;\\n    case \'OnManagerPageBeforeRender\':\\n        \\/** @noinspection PhpUndefinedVariableInspection *\\/\\n        $gallery = $modx->getService(\'gallery\',\'Gallery\',$modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\').\'model\\/gallery\\/\',$scriptProperties);\\n        if (!($gallery instanceof Gallery)) return \'\';\\n\\n        $snippetIds = \'\';\\n        $gallerySnippet = $modx->getObject(\'modSnippet\',array(\'name\' => \'Gallery\'));\\n        if ($gallerySnippet) {\\n            $snippetIds .= \'GAL.snippetGallery = \\"\'.$gallerySnippet->get(\'id\').\'\\";\'.\\"\\\\n\\";\\n        }\\n        $galleryItemSnippet = $modx->getObject(\'modSnippet\',array(\'name\' => \'GalleryItem\'));\\n        if ($galleryItemSnippet) {\\n            $snippetIds .= \'GAL.snippetGalleryItem = \\"\'.$galleryItemSnippet->get(\'id\').\'\\";\'.\\"\\\\n\\";\\n        }\\n\\n        $jsDir = $modx->getOption(\'gallery.assets_url\',null,$modx->getOption(\'assets_url\').\'components\\/gallery\\/\').\'js\\/mgr\\/\';\\n        $modx->controller->addLexiconTopic(\'gallery:default\');\\n        $modx->controller->addJavascript($jsDir.\'gallery.js\');\\n        $modx->controller->addJavascript($jsDir.\'tree.js\');\\n        $modx->controller->addHtml(\'<script type=\\"text\\/javascript\\">\\n        Ext.onReady(function() {\\n            GAL.config.connector_url = \\"\'.$gallery->config[\'connectorUrl\'].\'\\";\\n            \'.$snippetIds.\'\\n        });\\n        <\\/script>\');\\n        break;\\n    case \'OnDocFormPrerender\':\\n        \\/** @noinspection PhpUndefinedVariableInspection *\\/\\n        $gallery = $modx->getService(\'gallery\',\'Gallery\',$modx->getOption(\'gallery.core_path\',null,$modx->getOption(\'core_path\').\'components\\/gallery\\/\').\'model\\/gallery\\/\',$scriptProperties);\\n        if (!($gallery instanceof Gallery)) return \'\';\\n\\n        \\/* assign gallery lang to JS *\\/\\n        $modx->controller->addLexiconTopic(\'gallery:tv\');\\n\\n        \\/* @var modAction $action *\\/\\n        $action = null;\\n        if ($modx->getVersionData()[\'version\'] < 3){\\n            \\/\\/V2\\n            $action = $modx->getObject(\'modAction\',array(\\n                \'namespace\' => \'gallery\',\\n                \'controller\' => \'index\',\\n            ));\\n        }\\n\\n        $modx->controller->addHtml(\'<script type=\\"text\\/javascript\\">\\n        Ext.onReady(function() {\\n            GAL.config = {};\\n            GAL.config.connector_url = \\"\'.$gallery->config[\'connectorUrl\'].\'\\";\\n            GAL.action = \\"\'.($action ? $action->get(\'id\') : 0).\'\\";\\n        });\\n        <\\/script>\');\\n        $modx->controller->addJavascript($gallery->config[\'assetsUrl\'].\'js\\/mgr\\/tv\\/Spotlight.js\');\\n        $modx->controller->addJavascript($gallery->config[\'assetsUrl\'].\'js\\/mgr\\/gallery.js\');\\n        $modx->controller->addJavascript($gallery->config[\'assetsUrl\'].\'js\\/mgr\\/widgets\\/album\\/album.items.view.js\');\\n        $modx->controller->addJavascript($gallery->config[\'assetsUrl\'].\'js\\/mgr\\/widgets\\/album\\/album.tree.js\');\\n        $modx->controller->addJavascript($gallery->config[\'assetsUrl\'].\'js\\/mgr\\/tv\\/gal.browser.js\');\\n        $modx->controller->addJavascript($gallery->config[\'assetsUrl\'].\'js\\/mgr\\/tv\\/galtv.js\');\\n        $modx->controller->addCss($gallery->config[\'cssUrl\'].\'mgr.css\');\\n        break;\\n}\\nreturn;"}',
        'guid' => 'd24873d7f95ee31415d403959fb4b55e',
        'native_key' => NULL,
        'signature' => '3924eaaf4e1919b851f14efdc8aaed20',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Children' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 
      array (
        0 => 'parent',
        1 => 'category',
      ),
    ),
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Chunks' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Templates' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'templatename',
    ),
    'TemplateVars' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Plugins' => 
    array (
      'unique_key' => 'name',
      'preserve_keys' => false,
      'update_object' => true,
      'related_objects' => true,
      'related_object_attributes' => 
      array (
        'PluginEvents' => 
        array (
          'preserve_keys' => true,
          'update_object' => false,
          'unique_key' => 
          array (
            0 => 'pluginid',
            1 => 'event',
          ),
        ),
      ),
    ),
  ),
  'namespace' => 'gallery',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'php',
      'body' => '{"source":"gallery-2.0.1-pl\\/modCategory\\/9acf0df51da69b331ea6b45545e7f9dc.resolve.paths.resolver","type":"php","name":"resolve.paths"}',
    ),
    1 => 
    array (
      'type' => 'file',
      'body' => '{"source":"gallery-2.0.1-pl\\/modCategory\\/9acf0df51da69b331ea6b45545e7f9dc\\/1\\/","target":"return MODX_ASSETS_PATH . \'components\\/\';","name":"gallery"}',
    ),
    2 => 
    array (
      'type' => 'file',
      'body' => '{"source":"gallery-2.0.1-pl\\/modCategory\\/9acf0df51da69b331ea6b45545e7f9dc\\/2\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"gallery"}',
    ),
    3 => 
    array (
      'type' => 'php',
      'body' => '{"source":"gallery-2.0.1-pl\\/modCategory\\/9acf0df51da69b331ea6b45545e7f9dc.gpm.resolve.tables.resolver","type":"php","name":"gpm.resolve.tables"}',
    ),
    4 => 
    array (
      'type' => 'php',
      'body' => '{"source":"gallery-2.0.1-pl\\/modCategory\\/9acf0df51da69b331ea6b45545e7f9dc.resolve.albumfiles.resolver","type":"php","name":"resolve.albumfiles"}',
    ),
    5 => 
    array (
      'type' => 'php',
      'body' => '{"source":"gallery-2.0.1-pl\\/modCategory\\/9acf0df51da69b331ea6b45545e7f9dc.resolve.spaces.resolver","type":"php","name":"resolve.spaces"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'a25cd10fbf89822ca310d5e3e626a640',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => '9acf0df51da69b331ea6b45545e7f9dc',
  'native_key' => NULL,
  'object' => '{"id":null,"parent":0,"category":"Gallery","rank":0}',
);